#!/bin/sh
# ---------------------------------------------------
# Thumbnailer for HTML Documents
#
# Procedure :
#   http://bernaerts.dyndns.org/linux/76-gnome/325-gnome-shell-generate-msoffice-thumbnail-nautilus
# Depends on :
#   * xhtml2pdf (python-pisa package)
#   * gvfs-copy (gvfs-bin package)
#   * convert and composite (imagemagick package)
# Parameters :
#   $1 - URI of office file
#   $2 - full path of generated thumbnail
#   $3 - height of thumbnail in pixels
# ---------------------------------------------------

# check tools availability
command -v gvfs-copy >/dev/null 2>&1 || exit 1
command -v xhtml2pdf >/dev/null 2>&1 || exit 1
command -v convert >/dev/null 2>&1 || exit 1
command -v composite >/dev/null 2>&1 || exit 1

# path where to get icons used for generation
ICONPATH="/opt/extras.ubuntu.com/html-thumbnailer/share/pixmaps"
ICONPATH="/home/lorenzo/CloudStation/Programacion/Python/vivid/html-thumbnailer/data"

# get parameters
FILE_URI=$1
FILE_THUMB=$2
HEIGHT=$3

# get filename extension
FILE_EXT=$(echo "$FILE_URI" | sed 's/^.*\.\(.*\)/\1/')

# generate temporary directory
TMP_DIR=$(mktemp -d)
TMP_BASEFILE="$TMP_DIR/file"

# copy file to temporary local directory
gvfs-copy "${FILE_URI}" "${TMP_BASEFILE}.${FILE_EXT}"

# get the file mime type (application/msword, ...)
MIMETYPE=$(mimetype -b "${TMP_BASEFILE}.${FILE_EXT}")

# convert first document page to PDF
xhtml2pdf "${TMP_BASEFILE}.${FILE_EXT}" "${TMP_BASEFILE}.pdf"

# convert PDF to PNG
convert "${TMP_BASEFILE}.pdf[0]" "${TMP_BASEFILE}.png"

# generate thumbnail according to document type
composite -gravity center \( -resize x244 "${TMP_BASEFILE}.png" \) ${ICONPATH}/html.png ${ICONPATH}/html-mask.png \( -resize x${HEIGHT} \) "$FILE_THUMB"

# remove temporary files
rm -R $TMP_DIR
